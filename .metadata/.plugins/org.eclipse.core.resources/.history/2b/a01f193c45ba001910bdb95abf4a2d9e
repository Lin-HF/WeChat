package com.imooc.netty.websocket;

import io.netty.channel.ChannelHandlerContext;
import io.netty.channel.SimpleChannelInboundHandler;
import io.netty.channel.group.ChannelGroup;
import io.netty.channel.group.DefaultChannelGroup;
import io.netty.handler.codec.http.websocketx.TextWebSocketFrame;
import io.netty.util.concurrent.GlobalEventExecutor;
/**
 * 
 * @author linhaifeng1
 * @Description: 在netty中，是用于为websocket专门处理文本的对象，frame是消息载体
 *
 */
public class ChatHandler extends SimpleChannelInboundHandler<TextWebSocketFrame>{

	//用于记录和管理所有客户端的channel
	private static ChannelGroup clients = new DefaultChannelGroup(GlobalEventExecutor.INSTANCE);
	
	@Override
	protected void channelRead0(ChannelHandlerContext ctx, TextWebSocketFrame msg) throws Exception {
		//获取客户端传输过来的消息
		String content = msg.text();
		System.out.println("接受到的数据: "  + content);
		
		
		
	}

	/**
	 * 当客户端链接服务端之后（打开链接）
	 * 获取客户端的channel，并且放到ChannelGroup中进行管理
	 */
	@Override
	public void handlerAdded(ChannelHandlerContext ctx) throws Exception {
		clients.add(ctx.channel());
	}

	@Override
	public void handlerRemoved(ChannelHandlerContext ctx) throws Exception {
		//当出发handlerRemove，ChannelGrouo会自动移除对应客户端的channel
		//clients.remove(ctx.channel());
		System.out.println("客户端断开，channel对应的长id为： " + ctx.channel().id().asLongText());
		System.out.println("客户端断开，channel对应的短id为： " +ctx.channel().id().asShortText());
	}

}
